{"version":3,"sources":["model/user.js","components/User.js","components/UserList.js","components/App.js","index.js"],"names":["User","id","email","password","phone","name","status","dateCreate","dateUpdate","this","user","onDelete","onEdit","className","onClick","UserList","userList","deleteHandler","editHandler","map","now","moment","format","App","useState","JSON","parse","localStorage","getItem","setUserList","setEmail","setPassword","setPhone","setName","setStatus","setDateCreate","setDateUpdate","setId","isEdit","setIsEdit","searchInput","setSearchInput","filter","setFilter","error","setError","useEffect","setItem","stringify","filteredList","onChangeHandler","e","value","target","test","onSubmit","preventDefault","length","fio","fioA","split","i","isCorrectFIO","concat","Date","toString","onEditSubmit","newUser","newUserList","sorteredList","toLocaleLowerCase","includes","required","placeholder","type","autoFocus","onChange","editedUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffc364df.chunk.js","sourcesContent":["export class User {\r\n  constructor(\r\n    id,\r\n    email,\r\n    password,\r\n    phone,\r\n    name,\r\n    status,\r\n    dateCreate,\r\n    dateUpdate\r\n  ) {\r\n    this.id = id;\r\n    this.email = email;\r\n    this.password = password;\r\n    this.phone = phone;\r\n    this.name = name;\r\n    this.status = status;\r\n    this.dateCreate = dateCreate;\r\n    this.dateUpdate = dateUpdate;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst User = ({ user, onDelete, onEdit }) => {\r\n  const deleteHandler = (id) => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const editHandler = (id) => {\r\n    onEdit(id);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>{user.email}</td>\r\n        <td>{user.password}</td>\r\n        <td>{user.phone}</td>\r\n        <td>{user.name}</td>\r\n        <td>{user.status}</td>\r\n        <td>{user.dateCreate}</td>\r\n        <td>{user.dateUpdate}</td>\r\n        <td className='buttons'>\r\n          <button\r\n            className='btn__small btn__small-del'\r\n            onClick={() => deleteHandler(user.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            className='btn__small btn__small-ed'\r\n            onClick={() => editHandler(user.id)}\r\n          >\r\n            Edit\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport User from './User';\r\n\r\nconst UserList = ({ userList, onDelete, onEdit }) => {\r\n  const deleteHandler = (id) => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const editHandler = (id) => {\r\n    onEdit(id);\r\n  };\r\n\r\n  return (\r\n    <div className='table__container'>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Email</th>\r\n            <th>Пароль</th>\r\n            <th>Телефон</th>\r\n            <th>ФИО</th>\r\n            <th>Статус Пользователя</th>\r\n            <th>Дата создания</th>\r\n            <th>Дата последнего изменения</th>\r\n            <th>Опции</th>\r\n          </tr>\r\n        </thead>\r\n        {userList.map((user) => {\r\n          return (\r\n            <User\r\n              key={user.id}\r\n              user={user}\r\n              onDelete={deleteHandler}\r\n              onEdit={editHandler}\r\n            />\r\n          );\r\n        })}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport '../styles/App.css';\nimport { User } from '../model/user';\nimport UserList from './UserList';\n\nconst now = moment().format('DD MM YYYY hh:mm:ss');\n\nfunction App() {\n  const initialUserList = () => JSON.parse(localStorage.getItem('db')) || [];\n\n  const [userList, setUserList] = useState(initialUserList);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [name, setName] = useState('');\n  const [status, setStatus] = useState('client');\n  const [dateCreate, setDateCreate] = useState('');\n  const [dateUpdate, setDateUpdate] = useState('');\n  const [id, setId] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n  const [filter, setFilter] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('db', JSON.stringify(userList));\n  }, [userList]);\n\n  const onChangeHandler = (e) => {\n    const { value } = e.target;\n    switch (e.target.name) {\n      case 'email':\n        return setEmail(value);\n\n      case 'password':\n        return setPassword(value);\n      case 'phone':\n        const re = /^[0-9\\b]+$/;\n        if (value === '' || re.test(value)) {\n          return setPhone(value);\n        } else {\n          return;\n        }\n      case 'name':\n        return setName(value);\n      case 'status':\n        return setStatus(value);\n\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const dublicateEmail = userList.filter((user) => {\n      return user.email === email;\n    });\n\n    const isCorrectFIO = (fio) => {\n      if (!fio) {\n        return false;\n      }\n\n      let fioA = fio.split(' ');\n      if (fioA.length !== 3) {\n        return false;\n      }\n      for (let i = 0; i < 3; i++) {\n        if (/[^-А-ЯA-Z\\x27а-яa-z]/.test(fioA[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    if (dublicateEmail.length > 0) {\n      setError('Такой email уже существует');\n    } else if (password.length <= 3) {\n      setError('Пароль слишком короткий');\n    } else if (phone.length < 9) {\n      setError('В номере минимум 9 цифр');\n    } else if (!isCorrectFIO(name)) {\n      setError('Фамилия Имя Отчество');\n    } else if (status.length === 0) {\n      setError('Укажите статус');\n    } else {\n      setUserList(\n        userList.concat(\n          new User(\n            new Date().toString(),\n            email,\n            password,\n            phone,\n            name,\n            status,\n            now,\n            ''\n          )\n        )\n      );\n      setError('');\n      setEmail('');\n      setPassword('');\n      setPhone('');\n      setName('');\n      setStatus('client');\n    }\n  };\n\n  const onEditSubmit = (e) => {\n    e.preventDefault();\n\n    const isCorrectFIO = (fio) => {\n      if (!fio) {\n        return false;\n      }\n\n      let fioA = fio.split(' ');\n      if (fioA.length !== 3) {\n        return false;\n      }\n      for (let i = 0; i < 3; i++) {\n        if (/[^-А-ЯA-Z\\x27а-яa-z]/.test(fioA[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    if (password.length <= 3) {\n      setError('Пароль слишком короткий');\n    } else if (phone.length < 9) {\n      setError('В номере минимум 9 цифр');\n    } else if (!isCorrectFIO(name)) {\n      setError('Фамилия Имя Отчество');\n    } else if (status.length === 0) {\n      setError('Укажите статус');\n    } else {\n      const newUser = new User(\n        id,\n        email,\n        password,\n        phone,\n        name,\n        status,\n        dateCreate,\n        now\n      );\n\n      const newUserList = userList.map((user) => {\n        if (user.id === newUser.id) {\n          return {\n            ...user,\n            ...newUser,\n          };\n        } else {\n          return user;\n        }\n      });\n\n      setUserList(newUserList);\n      setError('');\n      setEmail('');\n      setPassword('');\n      setPhone('');\n      setName('');\n      setStatus('client');\n      setDateUpdate('');\n      setDateCreate('');\n      setIsEdit(false);\n    }\n  };\n\n  const onDelete = (id) => {\n    const newUserList = userList.filter((user) => {\n      return id !== user.id;\n    });\n    setUserList(newUserList);\n  };\n\n  const onEdit = (id) => {\n    const editedUser = userList.filter((user) => {\n      return id === user.id;\n    });\n    setEmail(editedUser[0].email);\n    setPassword(editedUser[0].password);\n    setPhone(editedUser[0].phone);\n    setName(editedUser[0].name);\n    setStatus(editedUser[0].status);\n    setDateCreate(editedUser[0].dateCreate);\n    setDateUpdate(editedUser[0].dateUpdate);\n    setId(editedUser[0].id);\n    setIsEdit(true);\n  };\n\n  const sorteredList = userList.filter((user) => {\n    return user.status === filter;\n  });\n\n  let filteredList;\n  if (filter.length === 0) {\n    filteredList = userList.filter((user) => {\n      return (\n        user.email\n          .toLocaleLowerCase()\n          .includes(searchInput.toLocaleLowerCase()) ||\n        user.phone.includes(+searchInput)\n      );\n    });\n  } else {\n    filteredList = sorteredList.filter((user) => {\n      return (\n        user.email\n          .toLocaleLowerCase()\n          .includes(searchInput.toLocaleLowerCase()) ||\n        user.phone.includes(+searchInput)\n      );\n    });\n  }\n\n  return (\n    <div id='home__page'>\n      <header className='header'>\n        <h1>Административное управление пользователями</h1>\n      </header>\n      <main className='main'>\n        <div className='main__tools'>\n          <div className='main__tools-adder'>\n            <form onSubmit={isEdit ? onEditSubmit : onSubmit}>\n              {error && (\n                <div className='error'>\n                  <p className='error__text'>{error}</p>\n                </div>\n              )}\n              <input\n                required\n                placeholder='Введите email'\n                type='email'\n                name='email'\n                autoFocus\n                value={email}\n                onChange={onChangeHandler}\n              />\n              <input\n                required\n                placeholder='Введите пароль'\n                type='password'\n                name='password'\n                value={password}\n                onChange={onChangeHandler}\n              />\n              <input\n                required\n                placeholder='Введите номер телефона'\n                type='text'\n                name='phone'\n                value={phone}\n                onChange={onChangeHandler}\n              />\n              <input\n                required\n                placeholder='Введите ФИО'\n                type='text'\n                name='name'\n                value={name}\n                onChange={onChangeHandler}\n              />\n              <select\n                name='status'\n                onChange={onChangeHandler}\n                value={status}\n                required\n              >\n                <option value='client'>Client</option>\n                <option value='partner'>Partner</option>\n                <option value='admin'>Admin</option>\n              </select>\n\n              {isEdit ? (\n                <button className='btn btn-edit' onSubmit={onEditSubmit}>\n                  Редактировать пользователя\n                </button>\n              ) : (\n                <button className='btn btn-add' onSubmit={onSubmit}>\n                  Добавить Пользователя\n                </button>\n              )}\n            </form>\n          </div>\n\n          <div className='main__tools-sorter'>\n            <input\n              placeholder='Поиск'\n              value={searchInput}\n              onChange={(e) => setSearchInput(e.target.value)}\n            />\n            <select\n              name='filter'\n              value={filter}\n              onChange={(e) => setFilter(e.target.value)}\n            >\n              <option value=''>Без фильтра</option>\n              <option value='client'>Clients</option>\n              <option value='partner'>Partners</option>\n              <option value='admin'>Admins</option>\n            </select>\n          </div>\n        </div>\n\n        <div className='main__list'>\n          <UserList\n            userList={filteredList}\n            onDelete={onDelete}\n            onEdit={onEdit}\n          />\n        </div>\n      </main>\n      <footer className='footer'>\n        <p>Made by Alexander Dramkov for a test app</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}